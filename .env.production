# ===================================
# KASAM HEALTHCARE - PRODUCTION CONFIG
# ===================================
# ⚠️  IMPORTANT: Replace placeholder values with actual client credentials

# Server Configuration
PORT=5000
NODE_ENV=production

# ===================================
# DATABASE CONFIGURATION
# ===================================
# ⚠️  REPLACE WITH CLIENT'S MONGODB ATLAS CONNECTION
# Current connection uses developer's personal MongoDB
# Client needs to:
# 1. Create MongoDB Atlas account
# 2. Create new cluster
# 3. Create database user
# 4. Replace this connection string
MONGODB_URI=mongodb+srv://CLIENT_USERNAME:CLIENT_PASSWORD@CLIENT_CLUSTER.mongodb.net/kasam_healthcare_prod?retryWrites=true&w=majority

# ===================================
# SECURITY CONFIGURATION
# ===================================
# ✅ These are newly generated secure secrets
JWT_SECRET=a27b8a6185ed9383058feb0180fdf9fcae4d68d79226d6fa6bf324e96f54cd84
JWT_EXPIRE=7d
SESSION_SECRET=fe3e64d99d82ff8be8c85209bd1136d4cf2daeb1f488a6873c6cdb6c24c7a5d8

# Enhanced security for production
BCRYPT_ROUNDS=14
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=50

# ===================================
# DOMAIN CONFIGURATION
# ===================================
# ⚠️  REPLACE WITH CLIENT'S ACTUAL DOMAIN
FRONTEND_URL=https://CLIENT_DOMAIN.com

# CORS Configuration
CORS_ORIGIN=https://CLIENT_DOMAIN.com

# ===================================
# GOOGLE OAUTH CONFIGURATION
# ===================================
# ⚠️  REPLACE WITH CLIENT'S GOOGLE OAUTH CREDENTIALS
# Current credentials belong to developer
# Client needs to:
# 1. Go to Google Cloud Console (console.cloud.google.com)
# 2. Create new project
# 3. Enable OAuth 2.0 API
# 4. Create OAuth 2.0 credentials
# 5. Add production domain to authorized origins
# 6. Add callback URL: https://CLIENT_BACKEND_DOMAIN.com/api/auth/google/callback
GOOGLE_CLIENT_ID=CLIENT_GOOGLE_CLIENT_ID.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=CLIENT_GOOGLE_CLIENT_SECRET

# ===================================
# OPTIONAL SERVICES
# ===================================

# Google Places API (for dynamic reviews)
# Client should create their own Google Places API key
GOOGLE_PLACES_API_KEY=CLIENT_GOOGLE_PLACES_API_KEY
GOOGLE_PLACE_ID=CLIENT_GOOGLE_PLACE_ID

# Email Service (for password reset emails)
# Client should configure their own email service
EMAIL_SERVICE=gmail
EMAIL_USER=client-email@domain.com
EMAIL_PASS=client-app-password

# Alternative SMTP configuration:
# EMAIL_SERVICE=smtp
# SMTP_HOST=smtp.client-domain.com
# SMTP_PORT=587

# ===================================
# FILE UPLOAD CONFIGURATION
# ===================================
MAX_FILE_SIZE=5242880
UPLOAD_PATH=./uploads

# ===================================
# LOGGING CONFIGURATION
# ===================================
LOG_LEVEL=warn

# ===================================
# PRODUCTION SECURITY HEADERS
# ===================================
HELMET_ENABLED=true
TRUST_PROXY=true
SSL_ENABLED=true
